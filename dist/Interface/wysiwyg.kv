#:set BLOCK_SIZE_X 200
#:set BLOCK_SIZE_Y 150
#:set LINK_BUTTON_SIZE 35

<MenuButton@Button>:
    font_size: 14
    group: 'menu'
    size_hint_x: .1
    size_hint_y: .1
    color: 0, 0, 0, 1
    background_normal: ''
    background_down: 'square-xxl.png'
    background_color: 0.9, 0.9, 0.9, 1

<CustButton@Button>:
    font_size: 14
    color: 0, 0, 0, 1
    background_normal: ''
    background_down: 'square-xxl.png'
    background_color: 1, 1, 1, 1
    size_hint_x: None
    size_hint_y: None

<CornerRectangleWidget@Widget>
	canvas:
		Color:
			rgba: 0, 0, 0, 0
		Rectangle:
			pos: (self.width/10),0
			size: (self.width*19)/20, self.height / 5
<BuilderSuite@BoxLayout>:
    size_hint_y: None
    padding: 3
    height: 40
    spacing: 1
    canvas:
        Color:
            rgba: .88, .88, .88, 1
        Rectangle:
            pos: self.pos
            size: self.size
    CustButton:
        text: "Save"
        size: 40, 40
        size_hint_x: None
    CustButton:
        text: "Play"
        size: 40, 40
        size_hint_x: None
    CustButton:
        text: "Stop"
        size: 40, 40
        size_hint_x: None
    CustButton:
        text: "Extract"
        size_hint_x: None
        size: 60, 40
        on_release: root.extract()
	TextInput:
		size_hint_x: 0.4
		id: outputpath
		hint_text: "Output Path"
		multiline: False
		on_text: root.updatePathname(self.text)

<BuildSpace>
    id: buildSpc
    orientation: 'horizontal'
    size_hint_x: 0.2
    canvas:
        Color:
            rgba: 0.17, 0.47, 0.68, 1
        Rectangle:
            pos: self.pos
            size: self.size
    ScrollView:
        DropDown:
            auto_width: False
            id: dropdownMeth
            on_parent: self.dismiss()
            size_hint_x: None
            size_hint_y: None
            width: 125
            CustButton:
                text: 'if'
                size: 80, 20
                on_release: root.addBlock("method",3,"if")
            CustButton:
                text: 'while'
                size: 80, 20
                on_release: root.addBlock("method",2,"while")
            CustButton:
                text: 'for'
                size: 80, 20
                on_release: root.addBlock("method",3,"for")
            CustButton:
                text: 'tf.abs'
                size: 80, 20
                on_release: root.addBlock("method",1,"tf.abs")
            CustButton:
                text: 'tf.accumulate_n'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.accumulate_n")
            CustButton:
                text: 'tf.acos'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.acos")
            CustButton:
                text: 'tf.add'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.add")
            CustButton:
                text: 'tf.add_n'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.add_n")
            CustButton:
                text: 'tf.argmax'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.argmax")
            CustButton:
                text: 'tf.argmin'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.argmin")
            CustButton:
                text: 'tf.asin'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.asin")
            CustButton:
                text: 'tf.atan'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.atan")
            CustButton:
                text: 'tf.betainc'
                size: 100, 20
                on_release: root.addBlock("method",3,"tf.betainc")
            CustButton:
                text: 'tf.ceil'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.ceil")
            CustButton:
                text: 'tf.cholesky'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.cholesky")
            CustButton:
                text: 'tf.cholesky_solve'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.cholesky_solve")
            CustButton:
                text: 'tf.complex'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.complex")
            CustButton:
                text: 'tf.conji'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.conji")
            CustButton:
                text: 'tf.cos'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.cos")
            CustButton:
                text: 'tf.count_nonzero'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.count_nonzero")
            CustButton:
                text: 'tf.cross'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.cross")
            CustButton:
                text: 'tf.cumprod'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.cumprod")
            CustButton:
                text: 'tf.cumsum'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.cumsum")
            CustButton:
                text: 'tf.diag'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.diag")
            CustButton:
                text: 'tf.diag_part'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.diag_part")
            CustButton:
                text: 'tf.diagamma'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.diagamma")
            CustButton:
                text: 'tf.div'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.div")
            CustButton:
                text: 'tf.divide'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.divide")
            CustButton:
                text: 'tf.edit_distance'
                size: 100, 202
                on_release: root.addBlock("method",2,"tf.edit_distance")
            CustButton:
                text: 'tf.einsum'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.einsum")
            CustButton:
                text: 'tf.erf'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.erf")
            CustButton:
                text: 'tf.erfc'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.erfc")
            CustButton:
                text: 'tf.exp'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.exp")
            CustButton:
                text: 'tf.expm1'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.expm1")
            CustButton:
                text: 'tf.eye'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.eye")
            CustButton:
                text: 'tf.floor'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.floor")
            CustButton:
                text: 'tf.floor_div'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.floor_div")
            CustButton:
                text: 'tf.floormod'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.floormod")
            CustButton:
                text: 'tf.floordiv'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.floordiv")
            CustButton:
                text: 'tf.igamma'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.igamma")
            CustButton:
                text: 'tf.igammac'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.igammac")
            CustButton:
                text: 'tf.imag'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.imag")
            CustButton:
                text: 'tf.invert_permutation'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.invert_permutation")
            CustButton:
                text: 'tf.lbeta'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.lbeta")
            CustButton:
                text: 'tf.lgamma'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.lgamma")
            CustButton:
                text: 'tf.log'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.log")
            CustButton:
                text: 'tf.log1p'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.log1p")
            CustButton:
                text: 'tf.matmul'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.matmul")
            CustButton:
                text: 'tf.matrix_band_part'
                size: 100, 20
                on_release: root.addBlock("method",3,"tf.matrix_band_part")
            CustButton:
                text: 'tf.matrix_determinant'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.matrix_determinant")
            CustButton:
                text: 'tf.matrix_diag'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.matrix_diag")
            CustButton:
                text: 'tf.matrix_diag_part'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.matrix_diag_part")
            CustButton:
                text: 'tf.matrix_inverse'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.matrix_inverse")
            CustButton:
                text: 'tf.matrix_set_diag'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.matrix_set_diag")
            CustButton:
                text: 'tf.matrix_solve'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.matrix_solve")
            CustButton:
                text: 'tf.matrix_solve_ls'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.matrix_solve_ls")
            CustButton:
                text: 'tf.matrix_transpose'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.matrix_transpose")
            CustButton:
                text: 'tf.matrix_triangular_solve'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.matrix_triangular_solve")
            CustButton:
                text: 'tf.maximum'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.maximum")
            CustButton:
                text: 'tf.minimum'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.minimum")
            CustButton:
                text: 'tf.mod'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.mod")
            CustButton:
                text: 'tf.multiply'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.multiply")
            CustButton:
                text: 'tf.negative'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.negative")
            CustButton:
                text: 'tf.norm'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.norm")
            CustButton:
                text: 'tf.polygamma'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.polygamma")
            CustButton:
                text: 'tf.pow'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.pow")
            CustButton:
                text: 'tf.qr'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.qr")
            CustButton:
                text: 'tf.real'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.real")
            CustButton:
                text: 'tf.realdiv'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.realdiv")
            CustButton:
                text: 'tf.reciprocal'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.reciprocal")
            CustButton:
                text: 'tf.reduce_all'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.reduce_all")
            CustButton:
                text: 'tf.reduce_any'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.reduce_any")
            CustButton:
                text: 'tf.reduce_logsumexp'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.reduce_logsumexp")
            CustButton:
                text: 'tf.reduce_max'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.reduce_max")
            CustButton:
                text: 'tf.reduce_mean'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.reduce_mean")
            CustButton:
                text: 'tf.reduce_min'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.reduce_min")
            CustButton:
                text: 'tf.reduce_prod'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.reduce_prod")
            CustButton:
                text: 'tf.reduce_sum'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.reduce_sum")
            CustButton:
                text: 'tf.rint'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.rint")
            CustButton:
                text: 'tf.round'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.round")
            CustButton:
                text: 'tf.rsqrt'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.rsqrt")
            CustButton:
                text: 'tf.scalar_mul'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.scalar_mul")
            CustButton:
                text: 'tf.segment_max'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.segment_max")
            CustButton:
                text: 'tf.segment_mean'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.segment_mean")
            CustButton:
                text: 'tf.segment_min'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.segment_min")
            CustButton:
                text: 'tf.segment_prod'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.segment_prod")
            CustButton:
                text: 'tf.segment_sum'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.segment_sum")
            CustButton:
                text: 'tf.self_adjoint_eig'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.self_adjoint_eig")
            CustButton:
                text: 'tf.self_adjoint_eigvals'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.self_adjoint_eigvals")
            CustButton:
                text: 'tf.setdiff1d'
                size: 100, 20
                on_release: root.addBlock("method",3,"tf.setdiff1d")
            CustButton:
                text: 'tf.sign'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.sign")
            CustButton:
                text: 'tf.sin'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.sin")
            CustButton:
                text: 'tf.sparse_segment_mean'
                size: 100, 20
                on_release: root.addBlock("method",3,"tf.sparse_segment_mean")
            CustButton:
                text: 'tf.sparse_segment_sqrt_n'
                size: 100, 20
                on_release: root.addBlock("method",3,"tf.sparse_segment_sqrt_n")
            CustButton:
                text: 'tf.sparse_segment_sum'
                size: 100, 20
                on_release: root.addBlock("method",3,"tf.sparse_segment_sum")
            CustButton:
                text: 'tf.sqrt'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.sqrt")
            CustButton:
                text: 'tf.square'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.square")
            CustButton:
                text: 'tf.squared_difference'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.squared_difference")
            CustButton:
                text: 'tf.subtract'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.subtract")
            CustButton:
                text: 'tf.svd'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.svd")
            CustButton:
                text: 'tf.tan'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.tan")
            CustButton:
                text: 'tf.tensordot'
                size: 100, 20
                on_release: root.addBlock("method",3,"tf.tensordot")
            CustButton:
                text: 'tf.trace'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.trace")
            CustButton:
                text: 'tf.transpose'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.transpose")
            CustButton:
                text: 'tf.truediv'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.truediv")
            CustButton:
                text: 'tf.truncatediv'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.truncatediv")
            CustButton:
                text: 'tf.truncatemod'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.truncatemod")
            CustButton:
                text: 'tf.unique'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.unique")
            CustButton:
                text: 'tf.unsorted_segment_sum'
                size: 100, 20
                on_release: root.addBlock("method",3,"tf.unsorted_segment_sum")
            CustButton:
                text: 'tf.where'
                size: 100, 20
                on_release: root.addBlock("method",1,"tf.where")
            CustButton:
                text: 'tf.zeta'
                size: 100, 20
                on_release: root.addBlock("method",2,"tf.zeta")
    
    BoxLayout:
        canvas:
            Color:
                rgba: 0.73, 0.69, 0.89, 1
            Rectangle:
                pos: self.pos
                size: self.size

    BoxLayout:
        height: .5
        orientation: 'vertical'
        MenuButton:
            text: "Variable"
            on_release: root.addBlock("variable")

        MenuButton:
            text: "Methods"
            on_release: dropdownMeth.open(self)

        MenuButton:
            text: "Class"
            on_release: root.addBlock("class")

        MenuButton:
            text: "Layer"

        MenuButton:
            text: "Probe"
            on_release: root.addBlock("probe")

        MenuButton:
            text: "Output"
            on_release: root.addBlock("output")

    CornerRectangleWidget:
        id: debugBanner

<Scatterer>:
    do_rotation: False
    do_scale: False
    do_resize: False
    size_hint: None, None
    size: BLOCK_SIZE_X,BLOCK_SIZE_Y
    canvas.after:
        Color:
            rgba: 1, 1, 1, .5
        Rectangle:
            size: self.size
            pos: self.pos

<probe_Block>:
    size: BLOCK_SIZE_X,BLOCK_SIZE_Y
    canvas:
        Color:
            rgba: 0, 0, 0, 1
        Rectangle:
            pos: self.pos
            size: self.size
    Label:
        id: val
    TextInput:
	Button:
		on_release: root.channel_in_dr()
		text: "Link"
		size: LINK_BUTTON_SIZE,LINK_BUTTON_SIZE

			
<output_Block>:
    size: BLOCK_SIZE_X,BLOCK_SIZE_Y
    canvas:
        Color:
            rgba: 0, 0, 0, 1
        Rectangle:
            pos: self.pos
            size: self.size
	Button:
		on_release: root.channel_in_dr()
		text: "Link"
		size: LINK_BUTTON_SIZE,LINK_BUTTON_SIZE


<variable_Block>:
    BoxLayout:
        id: variable
		size: BLOCK_SIZE_X,BLOCK_SIZE_Y
        canvas:
            Color:
                rgba: 0, 0, 0, 1
            Rectangle:
                pos: self.pos
                size: self.size
	    GridLayout:
	        cols: 3
	        rows: 4
		    ##orientation: 'vertical'
		    ##BoxLayout:
		        ##orientation: 'horizontal'
			Label:
			    text: ''
	        Button:
				on_release: root.channel_in_dr()
				text: "In"
				##size: LINK_BUTTON_SIZE,LINK_BUTTON_SIZE
	            ##CheckBox:
                    ##size: sp(32), sp(32)
                    ##on_active: root.channel_out_dr()
			Label:
			    text: ''
            Label:
		        size_hint_x: 0.3
				text: 'Name: '
				color: 255, 0, 0, 1
			TextInput:
			    size_hint_x: 0.4
			    id: name
				text: ""
				multiline: False
				font_size: 10
			Button:
			    size_hint_x: 0.3
			    on_release: root.takeName(name.text)
			    text: "Push"
	        ##BoxLayout:
	            ##orientation: 'horizontal'
	        Label:
				text: 'Value'
				color: 255, 0, 0, 1
			TextInput:
			    id: value
				text: ""
				multiline: False
				font_size: 10
			Button:
			    on_release: root.takeValue(value.text)
			    text: "Push"
	        ##BoxLayout:
			Label:
			    text: ''
			Button:
				on_release: root.channel_out_dr()
				text: "Out"
				##size: LINK_BUTTON_SIZE,LINK_BUTTON_SIZE
	            ##CheckBox:
                    ##size: sp(32), sp(32)
                    ##on_active: root.channel_out_dr()
			Label:
			    text: ''


<method_Block>:
    cols: 3
    rows: 3
    size: BLOCK_SIZE_X,BLOCK_SIZE_Y
    canvas:
        Color:
            rgba: 0, 0, 0, 1
        Rectangle:
            pos: self.pos
            size: self.size


<class_Block>:
    size: BLOCK_SIZE_X,BLOCK_SIZE_Y
    canvas:
        Color:
            rgba: 0, 0, 0, 1
        Rectangle:
            pos: self.pos
            size: self.size
    ##Label:
      ##  text: 'Class'
      ##  color: 0, 0, 0, 1
    Button:
		on_release: root.channel_out_dr()
		text: "Link"
		size: LINK_BUTTON_SIZE,LINK_BUTTON_SIZE
	##CheckBox:
		##size: sp(32), sp(32)
		##on_active: root.channel_out_dr()




<SampGridLayout>:
    rows: 3

    DocumentOptions:

    BuilderSuite:

    BuildSpace:

##    CornerRectangleWidget:
